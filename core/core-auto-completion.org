* core-auto-completion.el

** 関数

- [[file:../functions.org::*defmacro][defmacro]]
- [[file:../functions.org::*intern][intern]]
- [[file:../functions.org::*set][set]]

** 変数

** 処理

#+BEGIN_SRC emacs-lisp
  (defmacro spacemacs|defvar-company-backends (mode)
    "Define a MODE specific company backend variable with default backends.
  The variable name format is company-backends-MODE."
    `(defvar ,(intern (format "company-backends-%S" mode))
       '((company-dabbrev-code company-gtags company-etags company-keywords)
         company-files company-dabbrev)
       ,(format "Company backend list for %S" mode)))
#+END_SRC

=spacemacs|defvar-company-backends= の定義。
=intern= 関数で、ハッシュマップのエントリ保存ができる？

#+BEGIN_SRC emacs-lisp
  (defmacro spacemacs|add-company-hook (mode)
    "Enable company for the given MODE.
  MODE must match the symbol passed in `spacemacs|defvar-company-backends'.
  The initialization function is hooked to `MODE-hook'."
    (let ((mode-hook (intern (format "%S-hook" mode)))
          (func (intern (format "spacemacs//init-company-%S" mode))))
      `(when (configuration-layer/package-usedp 'company)
         (defun ,func ()
           ,(format "Initialize company for %S" mode)
           (set (make-variable-buffer-local 'auto-completion-front-end)
                'company)
           (set (make-variable-buffer-local 'company-backends)
                ,(intern (format "company-backends-%S" mode))))
         (add-hook ',mode-hook ',func t)
         (add-hook ',mode-hook 'company-mode t))))
#+END_SRC

フックなどを追加?

#+BEGIN_SRC emacs-lisp
  (defmacro spacemacs|disable-company (mode)
    "Disable company for the given MODE.
  MODE parameter must match the parameter used in the call to
  `spacemacs|add-company-hook'."
    (let ((mode-hook (intern (format "%S-hook" mode)))
          (func (intern (format "spacemacs//init-company-%S" mode))))
      `(progn
         (remove-hook ',mode-hook ',func)
         (remove-hook ',mode-hook 'company-mode))))
#+END_SRC

モードフックを削除

#+BEGIN_SRC emacs-lisp
  (defmacro spacemacs|enable-auto-complete (mode)
    "Enable auto-complete for the given MODE.
  The initialization function is hooked to `MODE-hook'."
    (let ((mode-hook (intern (format "%S-hook" mode)))
          (func (intern (format "spacemacs//init-auto-complete-%S" mode))))
      `(when (configuration-layer/package-usedp 'auto-complete)
         (defun ,func ()
           ,(format "Initialize auto-complete for %S" mode)
           (set (make-variable-buffer-local 'auto-completion-front-end)
                'auto-complete)
           (set (make-variable-buffer-local 'company-backends)
                ,(intern (format "company-backends-%S" mode))))
         (add-hook ',mode-hook ',func)
         (add-hook ',mode-hook 'auto-complete-mode))))

  (provide 'core-auto-completion)
#+END_SRC

モードごとの設定を追加
